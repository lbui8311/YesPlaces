{"ast":null,"code":"var _jsxFileName = \"/Users/luan/Downloads/YesPlaces/With_React/src/UserList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      users: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://127.0.0.1:8000/users/\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        users: result.users\n      });\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      users\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    } else {\n      return (\n        /*#__PURE__*/\n        // <ul>\n        //   {users?.map(user => (\n        //     <li key={user.id}>\n        //       {user.name} {user.price}\n        //     </li>\n        //   ))}\n        // </ul>\n        _jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), users === null || users === void 0 ? void 0 : users.map(user => {\n            /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      );\n    }\n  }\n}\nexport default UserList;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserList","Component","constructor","props","state","error","isLoaded","users","componentDidMount","fetch","then","res","json","result","setState","render","children","message","fileName","_jsxFileName","lineNumber","columnNumber","border","map","user","username","password","id"],"sources":["/Users/luan/Downloads/YesPlaces/With_React/src/UserList.js"],"sourcesContent":["import React from \"react\";\n\nclass UserList extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        users: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"http://127.0.0.1:8000/users/\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              users: result.users\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, users } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          // <ul>\n          //   {users?.map(user => (\n          //     <li key={user.id}>\n          //       {user.name} {user.price}\n          //     </li>\n          //   ))}\n          // </ul>\n          <table border='1'>\n            <thead>\n              <tr>\n                <th>Username</th>\n                <th>Password</th>\n              </tr>\n            </thead>\n            {users?.map(user => {\n              <tbody key={user.id}>\n                <tr>\n                  <td>{user.username}</td>\n                  <td>{user.password}</td>\n                </tr>\n              </tbody>\n            })}\n          </table>\n        );\n      }\n    }\n  }\n\n  export default UserList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}