{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarap\\\\YesPlaces-2\\\\react-places-pet\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\n// used chatgpt for some of this\nimport './index1.css';\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Star from './Star';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const handleRatingChange = newRating => {\n    setRating(newRating);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle the form submission logic here\n    // For example, you can send the comment to a backend API\n    console.log('Review submitted:', comment);\n    setComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Leave a Review:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Star, {\n          rating: rating,\n          onChange: handleRatingChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 1,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"kUlJZCn04uIfBMhjpQOH2/usb04=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Container","Star","Form","Button","jsxDEV","_jsxDEV","Comment","_s","comment","setComment","rating","setRating","handleRatingChange","newRating","handleSubmit","e","preventDefault","console","log","children","onSubmit","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Control","as","rows","value","target","className","type","_c","$RefreshReg$"],"sources":["C:/Users/sarap/YesPlaces-2/react-places-pet/src/components/Comment.js"],"sourcesContent":["// used chatgpt for some of this\r\nimport './index1.css';\r\nimport React, { useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Star from './Star';\r\nimport { Form, Button } from 'react-bootstrap';\r\nconst Comment = () => {\r\n  const [comment, setComment] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const handleRatingChange = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle the form submission logic here\r\n    // For example, you can send the comment to a backend API\r\n    console.log('Review submitted:', comment);\r\n    setComment('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      \r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"comment\">\r\n        <Form.Label>Leave a Review:</Form.Label>\r\n        <Star rating={rating} onChange={handleRatingChange} />\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={1}\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"btn-primary\" type=\"submit\">Submit</Button>\r\n    </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":";;AAAA;AACA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMa,kBAAkB,GAAIC,SAAS,IAAK;IACxCF,SAAS,CAACE,SAAS,CAAC;EACtB,CAAC;EACD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEV,OAAO,CAAC;IACzCC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA,CAACL,SAAS;IAAAmB,QAAA,eAEVd,OAAA,CAACH,IAAI;MAACkB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3Bd,OAAA,CAACH,IAAI,CAACmB,KAAK;QAACC,SAAS,EAAC,SAAS;QAAAH,QAAA,gBAC7Bd,OAAA,CAACH,IAAI,CAACqB,KAAK;UAAAJ,QAAA,EAAC;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACxCtB,OAAA,CAACJ,IAAI;UAACS,MAAM,EAAEA,MAAO;UAACkB,QAAQ,EAAEhB;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDtB,OAAA,CAACH,IAAI,CAAC2B,OAAO;UACXC,EAAE,EAAC,UAAU;UACbC,IAAI,EAAE,CAAE;UACRC,KAAK,EAAExB,OAAQ;UACfoB,QAAQ,EAAGb,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACkB,MAAM,CAACD,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbtB,OAAA,CAACF,MAAM;QAAC+B,SAAS,EAAC,aAAa;QAACC,IAAI,EAAC,QAAQ;QAAAhB,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhB,CAAC;AAACpB,EAAA,CAhCID,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}