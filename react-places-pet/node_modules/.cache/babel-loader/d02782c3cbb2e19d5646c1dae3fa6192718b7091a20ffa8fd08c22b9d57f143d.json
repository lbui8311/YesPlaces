{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarap\\\\YesPlaces-2\\\\react-places-pet\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\n// used chatgpt for this\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Star from './Star';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [comment, setComment] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle the form submission logic here\n    // For example, you can send the comment to a backend API\n    console.log('Comment submitted:', comment);\n    setComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Leave a comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 1,\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"vhAvzpEN661Y5K0yhbG0Td/NMg4=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Container","Star","Form","Button","jsxDEV","_jsxDEV","Comment","_s","comment","setComment","handleSubmit","e","preventDefault","console","log","onSubmit","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","as","rows","value","onChange","target","className","type","_c","$RefreshReg$"],"sources":["C:/Users/sarap/YesPlaces-2/react-places-pet/src/components/Comment.js"],"sourcesContent":["// used chatgpt for this\r\nimport React, { useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Star from './Star';\r\nimport { Form, Button } from 'react-bootstrap';\r\nconst Comment = () => {\r\n  const [comment, setComment] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Handle the form submission logic here\r\n    // For example, you can send the comment to a backend API\r\n    console.log('Comment submitted:', comment);\r\n    setComment('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"comment\">\r\n        <Form.Label>Leave a comment:</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={1}\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button className=\"btn-primary\" type=\"submit\">Submit</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,OAAO,CAAC;IAC1CC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA,CAACH,IAAI;IAACa,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BX,OAAA,CAACH,IAAI,CAACe,KAAK;MAACC,SAAS,EAAC,SAAS;MAAAF,QAAA,gBAC7BX,OAAA,CAACH,IAAI,CAACiB,KAAK;QAAAH,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACzClB,OAAA,CAACH,IAAI,CAACsB,OAAO;QACXC,EAAE,EAAC,UAAU;QACbC,IAAI,EAAE,CAAE;QACRC,KAAK,EAAEnB,OAAQ;QACfoB,QAAQ,EAAGjB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACblB,OAAA,CAACF,MAAM;MAAC2B,SAAS,EAAC,aAAa;MAACC,IAAI,EAAC,QAAQ;MAAAf,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEX,CAAC;AAAChB,EAAA,CAzBID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}